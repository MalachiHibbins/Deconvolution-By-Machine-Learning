Traceback (most recent call last):
  File "/home/malchi/anaconda3/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/malchi/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/malchi/anaconda3/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/malchi/anaconda3/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/malchi/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/malchi/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/malchi/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import torch
import matplotlib.pyplot as plt
from ImageDebluring import *
from PIL import Image
from torchvision import transforms


def step_function(period=2.0):
    xs = torch.linspace(-5, 5, steps=1000)
    ys = (((xs.round() % period) == 0).float() + 0.2)/2
    return xs, ys

def sin_function(period=2.0):
    xs = torch.linspace(-5, 5, steps=1000)
    ys = (torch.sin(xs * (2 * torch.pi / period)) + 1) / 2
    return xs, ys

def pigeon_function():
    image = Image.open('Images/pigeon.jpeg').convert('L')  # Convert to grayscale
    transform = transforms.Compose([
        transforms.Resize((1, 1000)),  # Resize to 1x1000
        transforms.ToTensor()
    ])
    img_tensor = transform(image).squeeze()  # Remove channel dimension
    return torch.linspace(0, 10, steps=1000), img_tensor

num_iters = 6
scale_factor = 5000

x, y = step_function()
signal = y.unsqueeze(0).unsqueeze(0)  # Add batch and channel dimensions
kernel = gaussian_normalised_kernel_1D(size = 61, sigma = 10.0)

blurred_signal = convolution_1D(signal, kernel)
measured_signal = add_poisson_noise(blurred_signal, scale_factor=scale_factor)

deblurred_signal = richardson_lucy(measured_signal, kernel, num_iters=num_iters)

fig, axs = plt.subplots(3, 2, figsize=(12, 8))
axs[0, 0].plot(y)
axs[0, 0].set_title('Step Function')
axs[1, 0].plot(kernel.squeeze())
axs[1, 0].set_title('Gaussian Kernel (1D)')
axs[2, 0].plot(measured_signal.squeeze())
axs[2, 0].set_title('Measured Signal (Blurred + Noisy)')
axs[0, 1].plot(blurred_signal.squeeze())
axs[0, 1].set_title('Blurred Signal')
axs[2, 1].plot(deblurred_signal.squeeze())
axs[2, 1].set_title(f'Deblurred Signal (Richardson-Lucy, {num_iters} iters)')
plt.tight_layout()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 1[0m
[0;32m----> 1[0m [38;5;28;01mimport[39;00m [38;5;21;01mtorch[39;00m
[1;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[1;32m      3[0m [38;5;28;01mfrom[39;00m [38;5;21;01mImageDebluring[39;00m [38;5;28;01mimport[39;00m [38;5;241m*[39m

[0;31mModuleNotFoundError[0m: No module named 'torch'

